/*=============Tabla: Parameter =======================================*/
/*Author: Ronaldo Vindas B 2018238697*/

USE `par`;

/*=============Getters===========================*/

DROP function IF EXISTS `get_parameter_name`;

DELIMITER $$
USE `par`$$
CREATE FUNCTION `get_parameter_name` (pId INT)
RETURNS VARCHAR(45)
DETERMINISTIC
BEGIN

	DECLARE EXIT HANDLER FOR 1231 SELECT 'Variable cannot be set to that value.' Message;
	DECLARE EXIT HANDLER FOR 1232 SELECT 'Incorrect argument type to variable.' Message;
	DECLARE EXIT HANDLER FOR 1105 SELECT 'Unknown error encountered.' Message;


	DECLARE vcName VARCHAR(45);
    SET vcName = (SELECT name FROM parameter WHERE id_parameter = pId);
RETURN vcName;
END$$

DELIMITER ;

/*////////////////////////////////////*/

DROP function IF EXISTS `get_parameter_value`;

DELIMITER $$
USE `par`$$
CREATE FUNCTION `get_parameter_value` (pId INT)
RETURNS VARCHAR(45)
DETERMINISTIC
BEGIN


	DECLARE EXIT HANDLER FOR 1231 SELECT 'Variable cannot be set to that value.' Message;
	DECLARE EXIT HANDLER FOR 1232 SELECT 'Incorrect argument type to variable.' Message;
	DECLARE EXIT HANDLER FOR 1105 SELECT 'Unknown error encountered.' Message;



	DECLARE vcValue VARCHAR(45);
    SET vcValue = (SELECT value FROM parameter WHERE id_parameter = pId);
	RETURN vcName;
END$$

DELIMITER ;